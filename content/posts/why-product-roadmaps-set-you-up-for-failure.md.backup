---
title: "Why Product Roadmaps Set You Up for Failure"
date: 2020-03-05T08:06:11-05:00
draft: true
image: /images/why-product-roadmaps-set-you-up-for-failure.jpg
type: post
tags:
  - Software
---
For 12 I've worked with SaaS product teams. Many have been successful in launching and generating revenue, others failed to ship. It all comes down to your product roadmap.

<!--more-->

As a product manager (or owner) what is the first thing you think of when you want to ship a product? 

Chances are you want to put together a roadmap for your product. Build it, ship it and keep following your roadmap.

Nothing wrong with having a roadmap to release your MVP, but after you ship that first version roadmaps turn into dangerous beasts.

See, roadmaps limit your scope and vision to what you, your stakeholders and your team *thinks* that needs to be built. This is a dangerous situation to be in because you are basically building in the dark without external input from important stakeholders, like _uhm_, you know, your customers!


## Problem

The problem with the traditional roadmap comes down that it is just a timeline. One big list of feature after feature spread out over a calendar. Something new comes in? Add it to the list, estimate it, done. 

Again, this may work out really early stage when you are building out an MVP, but it hurts the product, the release schedule and ultimately your customer if you are not careful.

### Heres why:

Building an MVP should be quick and within 6 to 12 months, during this time you are building a very limited feature set to get out there and gather feedback. (Though I would instead recommend a different approach: gather feedback even earlier than your first line of code, but I'll talk about that in another post).

The problem comes when you keep adding (after your MVP) to your timeline/roadmap, also called a Gantt chart, as your main tool for a release cycle.

### Why is it a problem?

Simple: Roadmaps make it easy to ignore stakeholders, budget, time, and most importantly your customers.

You are essentially building a black box of ideas to pick from and build. 

And the further away you stretch out your roadmap/timeline, the more you are making things up:

- It's satisfying to work on pet ideas youâ€™d use yourself, instead of projects with broad reach.
- It's tempting to focus on clever ideas, instead of projects that directly impact your goals.
- It's exciting to dive into new ideas, instead of projects that youâ€™re already confident about.
- It's easy to discount the additional effort that one project will require over another.

If you are now careful you are now making up what needs to be worked on.

... and ignoring what your customers want.

Your customers might be screaming at you at what they need/want, and your PM decides they will get to that "feedback" once the roadmap is done.

So your timeline roadmap is just a way of keeping stakeholders happy.

Oh and stakeholders love themeselves a Gantt chart, it means they can toss in there whatever they want.

![Real Stakeholder](/images/omg.gif)

Then there is also the risk that you are making assumptions in a timeline based roadmap, it is literally impossible to know how much something is going to take ther further down it is.

Also, the market may change. Your competitors may launch a huge update. God forbid you need to change your plans.

And then there's tech debt. And feature creep.

We should look at products as iterations.

First release the MVP, then iterate. 

Iterate on what? Well, do it based on market, customers and feedback. That way you end up finding ther right market fit and happy customers.

## A Better Approach: RICE

Here's my advice: Get rid of the timeline roadmap. Forget your gantt charts.

Done? Great! So what's next?

There's a better way. A way bestowed upon us by the Jedi Masters of Products themselves. Baby Yoda would be proud.

It is simple really: prioritize instead of adding to a timeline.

Prioritize your features based on how they impact your product goals and your customers. 

To do so I want to introduce you to **RICE (Reach, Impact, Confidence and Effort)**.

_Disclaimer: I didn't coin this term or the framework itself, in fact it is a scoring model that's been around for years and used by companies like Google and Intercom just to name two._

RICE is a simple to use method of prioritizing what features you should be working on based on which are the least effort but at the same time provide the most impact. 

A simple way to do this is to add all your features from your internal roadmap, requests from customers, nice to haves, etc into one column of a spreadsheet.

It looks something like this:

![RICE Example](/images/ricesample.png)

Here's what each of the columns mean:

- **Reach** - How many customers will this feature impact over a single quarter
- **Impact** - How much will this project increase a certain metric (i.e Conversion) on a scale from 1-5?
- **Confidence** - How confident are you about the optimistic estimates for reach, impact, and effort?
- **Effort** - Estimate the total amount of time a project will require from all members of your team. This can be in days or weeks, just keep it consistent.
- **RICE Score** - The RICE score, sort by this column to find out what you should be working on first.


Add reach impact, confidence and effort columns, and add numbers like this:

<iframe width="560" height="315" src="https://www.youtube.com/embed/kGJYVPeGdMo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>





That's it.

The results, while not perfect or all-telling, speak for themselves: **a prioritized backlog that lets you know what features have both the lowest effort and the highest impact in your business**.

Work on those first. 

Release, ask for feedabck, iterate.

Feel free to add to your backlog, but ALWAYS keep Ricing.

Remember, your roadmap is not meant to be a perfect plan of everything you're doing. Your roadmap is a prototype for your product strategy.

At the end of the day, the value isn't in the 'roadmap' itself. It's in the process of roadmapping, which is inherently a discovery process.

Thanks for reading and watching! 

**PS: If you liked this article, please share to let me know I should make more like this!**

--

I publish on [YouTube][1] and [andresmax.com][2], you can also get my latest posts every two weeks in tour inbox by subscribing below ðŸ‘‡

 [1]: https://www.youtube.com/andresmax
 [2]: https://www.andresmax.com/
 [3]: https://anchor.fm/andresmax
